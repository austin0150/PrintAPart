<!DOCTYPE html>
<html lang="en">
<link rel="shortcut icon" type="image/jpg" href="images/faviconImageClear.png">
<head>
    <%- include('../partials/head'); %>
</head>
<body>

<header>
    <%- include('../partials/header'); %>
</header>

<main>
    <nav class="navbar navbar-expand-sm navbar-light bg-light" style="margin-top: 15px;">
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <% if(!loggedIn) { %>
                        <div class="btn btn-outline-primary" data-toggle="modal" data-target="#createPostModal" >Create Post</div>
                    <% } else if (!roles.includes('Blogger')) { %>
                        <div class="btn btn-outline-primary" data-toggle="modal" data-target="#wrongRoleModal">Create Post</div>
                    <% } else { %>
                        <div class="btn btn-outline-primary" onclick="directToCreate()">Create Post</div>
                    <% } %>
                </li>
                <li class = "nav-item">
                  <% if(loggedIn) { %>
                    <% if(isFavorited) { %>
                    <div class="btn btn-outline-success" id="favoriteButton" onclick="makeFavorite('<%- commId  %>')">Remove from favorites</div>
                    <% } else { %>
                      <div class="btn btn-outline-primary" id="favoriteButton" onclick="makeFavorite('<%- commId  %>')">Favorite</div>
                      <% } %>
                    
                    <% } %>
                </li>
                <li class = "nav-item">
                  <% if(roles.includes('Admin')) { %>
                    <% if(!viewFlagged) { %>
                    <div class="btn btn-outline-danger" id="viewFlaggedPostsButton" onclick="viewFlaggedPosts('<%- commId  %>')">View Flagged Posts</div>
                    <% } else { %>  
                      <div class="btn btn-outline-danger" id="viewPublicPostsButton" onclick="viewPublicPosts('<%- commId  %>')">View Public Posts</div>
                    <% } %>
                    <% } %>
                </li>
            </ul>
        </div>
    </nav>

    <h1>
      <% if(viewFlagged) { %>Flagged <% } %>
      Posts from the <%= typeof communityData.name != 'undefined' ? communityData.name : 'community name' %> Community</h1>
      
      <center>
        <div style="display: flex; justify-content: center;">
        <input class="form-control w-25" style="margin:5px" id="searchbar" onkeyup="search_posts()" type="text"
        name="search" placeholder="Search posts...">
        <br>

        <script>
          var currentTags = [];
        </script>

        
        <div class="input-group mb-3 w-25" style="margin:5px">
            <div class="input-group-prepend">
              <button class="btn btn-outline-secondary" type="button" id="addTagBtn">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
              </svg>
            </button>
            </div>

            <input id="tagInput" type="text" class="form-control w-25" placeholder="Filter by tag..." aria-describedby="addTagBtn" pattern="[a-zA-Z0-9#]*" list="availableTags">
            <datalist id="availableTags" class="dropdown">
              <% tags.forEach(function(tag) { %>
                <option value="<%= tag.id %>">      
              <% }); %>
            </datalist>
          </div>

        </div>
          <h2 id="showTags" style="display:flex;justify-content: center; flex-wrap:wrap"></h2>
        </center>

    <div class="container" style="margin-top: 15px;">
        <div class="card-deck" style="justify-content: center;">
            <% posts.forEach(function(post) { %>
              <% if (post.data().accessible) { %>
                <%- include('../partials/blog_post', {post:post.data(), postId:post.id, commId:commId}); %>
              <% } %>
            <% }); %>
        </div>
    </div>

    <div class="modal fade" id="createPostModal" tabindex="-1" role="dialog" aria-labelledby="createPostModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="createPostLabel">Please log in to create a Post.</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-footer">
              <button id="loginBtn" type="button" class="btn btn-primary" onclick="navToLogIn()">Log In</button>
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>

      <div class="modal fade" id="wrongRoleModal" tabindex="-1" role="dialog" aria-labelledby="wrongRoleModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="wrongRoleLabel">You do not have the correct permissions to post</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>
        
</main>

<footer>
    <%- include('../partials/footer'); %>
</footer>

</body>
</html>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js" type="text/javascript"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

<script>
    // Restricts input for the given textbox to the given inputFilter function.
    function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function(event) {
            textbox.addEventListener(event, function() {
            if (inputFilter(this.value)) {
                this.oldValue = this.value;
                this.oldSelectionStart = this.selectionStart;
                this.oldSelectionEnd = this.selectionEnd;
            } else if (this.hasOwnProperty("oldValue")) {
                this.value = this.oldValue;
                this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
            } else {
                this.value = "";
            }
            });
        });
    }

    setInputFilter(document.getElementById("tagInput"), function(value) {
        return /^([a-zA-Z0-9]*)$/.test(value); // Allow alphanumeric and '#' characters only, using a RegExp
    });

    $('#addTagBtn').on("click", function(event){
        
        // Add tag to hidden input
        var tagVal = document.getElementById('tagInput').value.toLowerCase();
        if(tagVal == ""){
            alert("Please enter a tag.")
            return;
        }
        currentTags.push(tagVal);
        var newLabel = document.createElement('span');
        newLabel.setAttribute('id', tagVal);
        newLabel.setAttribute('class', 'badge rounded-pill bg-primary');
        newLabel.innerHTML = tagVal + " " + `<svg xmlns="http://www.w3.org/2000/svg" id="` + tagVal +`Remove" name="removeTag" onclick=RemoveTag(`+ JSON.stringify(tagVal) + `) tagwidth="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                                                </svg>`;
        newLabel.style = "color:white;margin:5px;padding:5px;font-weight:normal"
        $("#showTags").append(newLabel);
        document.getElementById('tagInput').value = "";

        // Now filter posts by tag
        let card = document.getElementsByClassName('feedCardContainer'); 
    
        for (i = 0; i < card.length; i++) {
          if (card[i].style.display == "block"){
            if (!(CardContainsTag(card[i], tagVal))) { 
                    card[i].style.display="none"; 
            } 
            else {  
              card[i].style.display="block";                  
            } 
          }  
    } 

    });

    
    function RemoveTag(tagValue) {
        document.getElementById(tagValue).remove();
        currentTags.splice(currentTags.indexOf(tagValue),1);
        let card = document.getElementsByClassName('feedCardContainer');
        
        if(currentTags.length == 0){
          for (i = 0; i < card.length; i++) {  
                  card[i].style.display="block";                  
              }
          search_posts();

        } else { 
          for (i = 0; i < card.length; i++) {
            for (x = 0; x<currentTags.length; x++) {  
                if (!(CardContainsTag(card[i], currentTags[x]))) { 
                        card[i].style.display="none";
                        break; 
                } 
                else {  
                  card[i].style.display="block";                  
                } 
              }
          }
        }
    }

    function openPost(commId, postId)
    {
        window.location.href = '/blog_post?commId='+commId+'&postId='+postId;
    }

    function directToCreate()
    {
        window.location.href = '/create_post?communityId=<%- commId %>';
    }

    function navToLogIn()
    {
        window.location.href = '/login'
    }

    function viewFlaggedPosts(commId)
    {
        window.location.href = '/community_feed?commId='+commId+'&Flagged=true';
    }

    function viewPublicPosts(commId)
    {
        window.location.href = '/community_feed?commId='+commId;
    }
    

    function makeFavorite(commId)
    {
      var btn = document.getElementById("favoriteButton");
      if(btn.className == "btn btn-outline-primary") {
        $.ajax({
          url:'/add_community_favorite',
          type: 'POST',
          contentType: 'application/json',
          processData: false,
          data: JSON.stringify({commId:commId}),
          success: function(data){
          console.log('save success');
          btn.setAttribute("class", "btn btn-success");
          btn.innerHTML = "Remove from favorites";
          btn.className = "btn btn-outline-success";
          }
        });

      }else { 
        $.ajax({
          url:'/remove_community_favorite',
          type: 'POST',
          contentType: 'application/json',
          processData: false,
          data: JSON.stringify({commId:commId}),
          success: function(data){
          console.log('save success');
          btn.setAttribute("class", "btn btn-outline-success");
          btn.innerHTML = "Favorite";
          btn.setAttribute("class", "btn btn-outline-primary");
          }

      });
    }
    }

    function deletePostWarning(commId, postId) {
      var modalId = "#deletePostModal_" + postId;
      $(modalId).modal("show");
    }

    function deletePost(commId, postId, loggedIn) {
      $.ajax({
      statusCode: {
        401: function (data) {
          if (loggedIn) {
            window.location.href = '/unauthorized'
          } else {
            window.location.href = '/login'
          }
        }
      },
      url: '/delete_post',
      type: 'POST',
      contentType: 'application/json',
      processData: false,
      data: JSON.stringify({commId: commId, postId : postId}),
      success: function(data){
        console.log("success!")
        window.location.href = '/community_feed?commId='+commId
      },
      failure: function(data){
        console.log("Failed")
      }
    }); 

      }

function openFlaggedNotes(commId, postId, loggedIn) {
  window.location.href = '/blog_post_flagged_comments?commId='+commId+'&postId='+postId;
}

function search_posts() { 
    let input = document.getElementById('searchbar').value 
    input=input.toLowerCase(); 
    let card = document.getElementsByClassName('feedCardContainer'); 
    
    for (i = 0; i < card.length; i++) {
      // Only search within cards that have all current tags
      if(CardContainsAllTags(card[i])) {
        if (!(TagContainsInput(card[i], input) ||
              card[i].querySelector('.card-title').innerHTML.toLowerCase().includes(input) ||
              card[i].querySelector('.card-text').innerHTML.toLowerCase().includes(input))) { 
                card[i].style.display="none"; 
        } 
        else {  
          card[i].style.display="block";                  
        }
      }  
         
    } 
}

function TagContainsInput(card, input) {
  var containsInput = false;
  var allTags = card.querySelectorAll('span');
  
  if (allTags && allTags.length >= 1){
    for(var i=0; i<allTags.length; i++){
      if(allTags[i].innerHTML.includes(input)){
        containsInput = true;
        return containsInput;
      }
    }
  } 
  return containsInput;
}

function CardContainsTag(card, input) {
  var containsTag = false;
  var allTags = card.querySelectorAll('span');
  
  if (allTags && allTags.length >= 1){
    for(var i=0; i<allTags.length; i++){
      if(allTags[i].innerHTML == input){
        containsTag = true;
        return containsTag;
      }
    }
  } 
  return containsTag;
}

function CardContainsAllTags(card) {
  var containsAllTags = true;
  var allTags = card.querySelectorAll('span');
  var cardTagNames = [];
  // First get all tags in that card
  if (allTags && allTags.length >= 1){
    for(var i=0; i<allTags.length; i++){
      cardTagNames.push(allTags[i].innerHTML);
    }
  } 
  // Then make sure that the current tag filters exist within that card
  for(var i=0; i<currentTags.length; i++){
    if(!(cardTagNames.includes(currentTags[i]))) {
      containsAllTags = false;
      return containsAllTags;
    }
  }
  return containsAllTags;
}

</script>